syntax on
set number
set showmatch
set mouse=a
set tw:1337
set si
set hls is
set showcmd
set autoread 
set incsearch
set shiftwidth=2
set softtabstop=2
set backspace=2
set expandtab
set autoindent
set smartindent
set smarttab
set nocompatible      " We're running Vim, not Vi!
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins
filetype plugin indent on

if &term =~ '^screen'
  set ttymouse=xterm2
endif

" colorecting colorscheme
set t_Co=256
set clipboard=unnamed

autocmd Filetype gitcommit setlocal spell textwidth=72

nnoremap <silent> _ :exe "resize +1"<CR>
nnoremap <silent> ç :exe "resize -1"<CR>
nnoremap <silent> à :exe "vertical resize -1"<CR>
nnoremap <silent> è :exe "vertical resize +1"<CR>

nnoremap <silent> <C-_> :exe "resize +5"<CR>
nnoremap <silent> <C-ç> :exe "resize -5"<CR>
nnoremap <silent> <C-à> :exe "vertical resize -5"<CR>
nnoremap <silent> <C-è> :exe "vertical resize +5"<CR>

nnoremap <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

nnoremap jj gt

inoremap II <Esc>I
inoremap AA <Esc>A
inoremap OO <Esc>o
inoremap UU <Esc>ui

filetype off          " required!



set rtp+=~/.vim/bundle/vundle
call vundle#rc()

"let Vundle manage Vundle
"required!
Bundle 'gmarik/vundle'
Bundle 'vim-ruby/vim-ruby'
Bundle 'scrooloose/nerdtree'
Bundle 'Xuyuanp/nerdtree-git-plugin'
Bundle 'tpope/vim-bundler'
Bundle 'tpope/vim-cucumber'
Bundle 'tpope/vim-haml'
Bundle 'tpope/vim-markdown'
Plugin 'rust-lang/rust.vim'
Bundle 'groenewege/vim-less'
Bundle "pangloss/vim-javascript"
Bundle 'elzr/vim-json'
Bundle 'tpope/vim-rails'
Bundle 'xenoterracide/html.vim'
Bundle 'kchmck/vim-coffee-script'
Bundle 'thoughtbot/vim-rspec'
Bundle "sheerun/vim-polyglot"
Bundle "Slava/vim-spacebars"

Bundle 'scrooloose/syntastic'
Bundle 'tpope/vim-abolish'
Bundle 'altercation/vim-colors-solarized'
Bundle 'rking/ag.vim'
Bundle 'tpope/vim-fugitive'
Bundle 'airblade/vim-gitgutter'
Bundle 'bling/vim-airline'
Bundle 'rizzatti/funcoo.vim'
Bundle 'rizzatti/dash.vim'
Bundle 'mattn/webapi-vim'
Bundle 'mattn/gist-vim'
Bundle 'rodjek/vim-puppet'
Bundle 'othree/javascript-libraries-syntax.vim'
Bundle 'mileszs/ack.vim'
Plugin 'rust-lang/rust.vim'
Plugin 'tpope/vim-unimpaired'
Plugin 'ngmy/vim-rubocop'


set laststatus=2
let g:airline_powerline_fonts = 1

set background=dark " dark | light "
colorscheme solarized

set regexpengine=1

set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" Tab completion
" will insert tab at beginning of line,
" will use completion if not at beginning
set wildmode=list:longest,list:full
set complete=.,w,t
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction
inoremap <Tab> <c-r>=InsertTabWrapper()<cr>

let g:used_javascript_libs = 'jquery,underscore'

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

filetype plugin indent on     " required!

