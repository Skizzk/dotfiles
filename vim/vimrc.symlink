syntax on
set number
set showmatch
set tw:1337
set hls is
set showcmd
set autoread 
set incsearch
set shiftwidth=2
set softtabstop=2
set backspace=2
set expandtab
set autoindent
set smartindent
set smarttab
set encoding=utf-8
set nocompatible      " We're running Vim, not Vi!
filetype off           " Enable filetype detection

" mouse support
set mouse=a
" mouse support on more than 220 col
set ttymouse=sgr

" colorecting colorscheme
set t_Co=256
set clipboard=unnamed

autocmd Filetype gitcommit setlocal spell textwidth=72
autocmd Filetype markdown setlocal spell spelllang=fr
autocmd Filetype markdown hi SpellBad cterm=underline ctermfg=red

nnoremap <F5> :ALEFix<CR>
nnoremap <F6> :lw<CR>
nnoremap <F7> :lcl<CR>
nnoremap <F8> :call LanguageClient_contextMenu()<CR>

inoremap III <Esc>I
inoremap AAA <Esc>A
inoremap OOO <Esc>o

nnoremap ¬      :tabnext<CR>
nnoremap ˙      :tabprevious<CR>
nnoremap <C-t>  :tabnew<CR> 
inoremap ¬      <Esc>:tabnext<CR>i
inoremap ˙      <Esc>:tabprevious<CR>i
inoremap <C-t>  <Esc>:tabnew<CR>

filetype off          " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

"let Vundle manage Vundle
"required!
Plugin 'VundleVim/Vundle.vim'
Plugin 'roxma/nvim-yarp'
Plugin 'roxma/vim-hug-neovim-rpc'
Plugin 'Shougo/deoplete.nvim'
Plugin 'Shougo/neco-syntax'
Plugin 'autozimu/languageclient-neovim'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'tpope/vim-rails'
Plugin 'mhinz/vim-signify'
Plugin 'thoughtbot/vim-rspec'
Plugin 'sheerun/vim-polyglot'
Plugin 'tpope/vim-abolish'
Plugin 'tpope/vim-eunuch'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-endwise'
Plugin 'docunext/closetag.vim'
Plugin 'easymotion/vim-easymotion'
Plugin 'altercation/vim-colors-solarized'
Plugin 'rking/ag.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'bling/vim-airline'
Plugin 'rizzatti/funcoo.vim'
Plugin 'rizzatti/dash.vim'
Plugin 'mattn/webapi-vim'
Plugin 'mattn/gist-vim'
Plugin 'mileszs/ack.vim'
Plugin 'w0rp/ale'
Plugin 'tpope/vim-unimpaired'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'epilande/vim-es2015-snippets'
Plugin 'epilande/vim-react-snippets'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'dhruvasagar/vim-zoom'

call vundle#end()            " required
filetype plugin indent on    " required

let g:deoplete#enable_at_startup = 1
set completeopt+=noinsert

let g:LanguageClient_serverCommands = {
    \ 'ruby': ['solargraph','stdio']
    \ }


nmap ; :Buffers<CR>
nmap <Leader>t :Files<CR>
nmap <Leader>r :Tags<CR>

let g:tmux_navigator_no_mappings = 1

nnoremap <silent> <c-s-l> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-s-k> :TmuxNavigateDown<cr>
nnoremap <silent> <c-s-j> :TmuxNavigateUp<cr>
nnoremap <silent> <c-s-h> :TmuxNavigateRight<cr>

let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetDirectories = ['~/.vim/UltiSnips', 'UltiSnips']

let g:UltiSnipsExpandTrigger       = "<c-l>"
let g:UltiSnipsListSnippets        = "<c-k>"
let g:UltiSnipsJumpForwardTrigger  = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

set wildmode=list:longest,list:full

set laststatus=2
let g:airline_powerline_fonts = 1
let g:airline#extensions#ale#enabled = 1

set background=dark " dark | light "
colorscheme solarized

" Tab completion
function! InsertTabWrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<CR>"
  endif
endfunction
inoremap <silent><expr> <Tab> InsertTabWrapper()

set regexpengine=1

let g:gitgutter_signs = 0

let g:javascript_plugin_flow = 1

let g:ale_fixers = {}
let g:ale_fixers['ruby'] = ['rubocop']
let g:ale_fixers['javascript'] = ['prettier-eslint']
let g:ale_fixers['ruby'] = ['rubocop']
let g:ale_javascript_prettier_eslint_options = '--single-quote --trailing-comma all --no-semi'
let g:ale_fix_on_save = 1

let g:ale_linters = {
      \   'javascript': ['eslint', 'flow'],
      \   'ruby': ['rubocop'],
      \   'scss': ['scss_lint'],
      \   'html': ['tidy'],
      \}

let g:used_javascript_libs = 'jquery,underscore'

filetype plugin indent on     " required!
if filereadable($HOME . "/.vimrc.local")
  source $HOME/.vimrc.local
endif
